{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/hooks/useKey.jsx","webpack:///./src/components/gridMovement.jsx","webpack:///./src/styles/colors.js","webpack:///./src/components/Tile.jsx","webpack:///./src/components/gameController.jsx","webpack:///./src/pages/Layout/Main.jsx"],"names":["globalStyles","styles","key","callback","useEffect","handler","event","window","addEventListener","removeEventListener","moveUp","gridState","row","map","tile","rowId","isVisible","checkColumn","state","columnId","length","newState","text","background","baseStyle","contentStyle","getTextStyles","value","startingNumber","reduce","accumulator","color","css","getBackgroundStyles","Tile","defaultProps","gameContainerStyles","initState","gridSize","Array","column","id","Math","floor","random","Object","keys","generateGrid","generateTile","moveGrid","moveDown","moveLeft","moveRight","gameController","useState","grid","setGrid","useKey","layoutStyles"],"mappings":"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","file":"component---src-pages-index-jsx-2c934e24ed35fd5a61c0.js","sourcesContent":["import React from 'react';\nimport { Global, css } from '@emotion/core';\nimport Main from './Layout/Main';\n\nexport default () => {\n  const globalStyles = css`\n    html,\n    body,\n    #___gatsby,\n    div[role='group'][tabindex] {\n      width: 100%;\n      height: 100%;\n      padding: 0;\n      margin: 0;\n      background: #59c173; /* fallback for old browsers */\n      background: linear-gradient(to right, #5d26c1, #a17fe0, #59c173);\n    }\n  `;\n\n  return (\n    <>\n      <Global styles={globalStyles} />\n      <Main />\n    </>\n  );\n};\n","// Window not defined because server Side rendering\n/* eslint-disable no-undef */\nimport { useEffect } from 'react';\n\nexport default (key, callback) =>\n  useEffect(() => {\n    const handler = (event) => event.key === key && callback(event);\n\n    window.addEventListener('keydown', handler);\n    return () => {\n      window.removeEventListener('keydown', handler);\n    };\n  }, []);\n","const checkColumn = (state, tile, rowId, columnId) => {\n  if (state.length === 0) {\n    return tile;\n  }\n  if (!state[columnId][rowId].isVisible) {\n    return { ...tile, isVisible: true };\n  }\n  return checkColumn(state, tile, rowId, columnId - 1);\n};\n\nconst moveUp = (gridState) => {\n  const row = gridState[0].map((tile, rowId) => {\n    if (!tile.isVisible) {\n      return checkColumn(gridState, tile, rowId, gridState.length - 1);\n    }\n    return tile;\n  });\n  const newState = [...gridState];\n  newState[0] = row;\n  return newState;\n};\n\nconst moveDown = (gridState) =>\n  gridState.map((column, columnId) =>\n    column.map((tile, rowId) => {\n      if (\n        tile.isVisible &&\n        gridState[columnId + 1] &&\n        gridState[columnId + 1][rowId] &&\n        !gridState[columnId + 1][rowId].isVisible\n      )\n        return { ...tile, isVisible: false };\n      if (\n        !tile.isVisible &&\n        gridState[columnId - 1] &&\n        gridState[columnId - 1][rowId] &&\n        gridState[columnId - 1][rowId].isVisible\n      )\n        return { ...tile, isVisible: true };\n\n      if (\n        tile.isVisible &&\n        gridState[columnId - 1] &&\n        gridState[columnId - 1][rowId] &&\n        gridState[columnId - 1][rowId].isVisible &&\n        gridState[columnId - 1][rowId].value === tile.value\n      )\n        return { ...tile, value: tile.value + gridState[columnId - 1][rowId].value };\n\n      if (\n        tile.isVisible &&\n        gridState[columnId + 1] &&\n        gridState[columnId + 1][rowId] &&\n        gridState[columnId + 1][rowId].isVisible &&\n        gridState[columnId + 1][rowId].value === tile.value\n      )\n        return { ...tile, isVisible: false };\n      return tile;\n    }),\n  );\n\nconst moveLeft = (gridState) =>\n  gridState.map((column, columnId) =>\n    column.map((tile, rowId) => {\n      if (\n        tile.isVisible &&\n        gridState[columnId][rowId + 1] &&\n        !gridState[columnId][rowId + 1].isVisible\n      )\n        return { ...tile, isVisible: false };\n      if (\n        !tile.isVisible &&\n        gridState[columnId][rowId + 1] &&\n        gridState[columnId][rowId + 1].isVisible\n      )\n        return { ...tile, isVisible: true };\n\n      if (\n        tile.isVisible &&\n        gridState[columnId][rowId + 1] &&\n        gridState[columnId][rowId + 1].isVisible &&\n        gridState[columnId][rowId + 1].value === tile.value\n      )\n        return { ...tile, value: tile.value + gridState[columnId][rowId + 1].value };\n\n      if (\n        !tile.isVisible &&\n        gridState[columnId][rowId + 1] &&\n        gridState[columnId][rowId + 1].isVisible &&\n        gridState[columnId][rowId + 1].value === tile.value\n      )\n        return { ...tile, isVisible: false };\n      return tile;\n    }),\n  );\n\nconst moveRight = (gridState) =>\n  gridState.map((column, columnId) =>\n    column.map((tile, rowId) => {\n      if (\n        tile.isVisible &&\n        gridState[columnId][rowId - 1] &&\n        !gridState[columnId][rowId - 1].isVisible\n      )\n        return { ...tile, isVisible: false };\n      if (\n        !tile.isVisible &&\n        gridState[columnId][rowId - 1] &&\n        gridState[columnId][rowId - 1].isVisible\n      )\n        return { ...tile, isVisible: true };\n\n      if (\n        tile.isVisible &&\n        gridState[columnId][rowId - 1] &&\n        gridState[columnId][rowId - 1].isVisible &&\n        gridState[columnId][rowId - 1].value === tile.value\n      )\n        return { ...tile, value: tile.value + gridState[columnId][rowId - 1].value };\n\n      if (\n        !tile.isVisible &&\n        gridState[columnId][rowId - 1] &&\n        gridState[columnId][rowId - 1].isVisible &&\n        gridState[columnId][rowId - 1].value === tile.value\n      )\n        return { ...tile, isVisible: false };\n      return tile;\n    }),\n  );\n\nexport { moveDown, moveLeft, moveRight, moveUp };\n","const text = [\n  '#410058',\n  '#53006C',\n  '#67007E',\n  '#7A0090',\n  '#8E00A0',\n  '#8422AF',\n  '#8144BD',\n  '#8466CB',\n  '#8F88D8',\n  '#AAAAE4',\n  '#CCD2EF',\n];\n\nconst background = [\n  '#0A2F51',\n  '#0E4D64',\n  '#137177',\n  '#188977',\n  '#1D9A6C',\n  '#39A96B',\n  '#56B870',\n  '#74C67A',\n  '#99D492',\n  '#BFE1B0',\n  '#DEEDCF',\n];\n\nexport { text, background };\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport PropTypes from 'prop-types';\nimport { text, background } from '../styles/colors';\n\nconst baseStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 180px;\n  height: 180px;\n  border: 2px solid black;\n  border-radius: 5%;\n`;\n\nconst contentStyle = css`\n  font-size: 72px;\n  font-weight: bold;\n`;\n\nconst getTextStyles = (value) => {\n  let startingNumber = 2;\n  const styles = text.reduce((accumulator, color) => {\n    if (!accumulator[startingNumber]) return { ...accumulator, [startingNumber]: color };\n    startingNumber *= 2;\n\n    return { ...accumulator, [startingNumber]: color };\n  }, {});\n  return css`\n    color: ${styles[value]};\n  `;\n};\n\nconst getBackgroundStyles = (value) => {\n  let startingNumber = 2048;\n  const styles = background.reduce((accumulator, color) => {\n    if (!accumulator[startingNumber]) return { ...accumulator, [startingNumber]: color };\n    startingNumber /= 2;\n\n    return { ...accumulator, [startingNumber]: color };\n  }, {});\n  return css`\n    background-color: ${styles[value]};\n  `;\n};\n\nfunction Tile({ isVisible, value }) {\n  return (\n    <div css={[baseStyle, isVisible && getBackgroundStyles(value)]}>\n      {isVisible && <span css={[contentStyle, getTextStyles(value)]}>{value}</span>}\n    </div>\n  );\n}\n\nTile.propTypes = {\n  isVisible: PropTypes.bool,\n  value: PropTypes.number,\n};\n\nTile.defaultProps = {\n  isVisible: false,\n  value: 2,\n};\n\nexport default Tile;\n","import React, { useState } from 'react';\nimport { css } from '@emotion/core';\nimport PropTypes from 'prop-types';\nimport useKey from '../hooks/useKey';\nimport { moveDown, moveLeft, moveRight, moveUp } from './gridMovement';\nimport Tile from './Tile';\n\nconst gameContainerStyles = css`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  height: 800px;\n  width: 800px;\n  border: 3px solid black;\n  border-radius: 2%;\n  padding: 15px;\n`;\n\nconst initState = (gridSize) => {\n  const state = new Array(gridSize);\n  for (let column = 0; column < gridSize; column += 1) {\n    state[column] = new Array(gridSize);\n    for (let row = 0; row < gridSize; row += 1) {\n      state[column][row] = { id: `${column}${row}`, value: 2, isVisible: false };\n    }\n  }\n\n  const columnId = Math.floor(Math.random() * Object.keys(state).length);\n  const rowId = Math.floor(Math.random() * Object.keys(state).length);\n  state[columnId][rowId] = { id: `${columnId}${rowId}`, value: 2, isVisible: true };\n\n  return state;\n};\n\nconst generateGrid = (gridState) =>\n  gridState.reduce(\n    (accumulator, column) => [\n      ...accumulator,\n      ...column.map(({ id, value, isVisible }) => {\n        return <Tile key={id} value={value} isVisible={isVisible} />;\n      }),\n    ],\n    [],\n  );\n\nconst generateTile = (gridState) => {\n  const columnId = Math.floor(Math.random() * Object.keys(gridState).length);\n  const rowId = Math.floor(Math.random() * Object.keys(gridState).length);\n  const { isVisible } = gridState[columnId][rowId];\n  if (!isVisible) {\n    const newState = [...gridState];\n    newState[columnId][rowId] = {\n      ...gridState[columnId][rowId],\n      isVisible: true,\n    };\n\n    return newState;\n  }\n\n  return generateTile(gridState);\n};\n\nconst moveGrid = (gridState, { key }) => {\n  let state;\n  switch (key) {\n    case 'ArrowUp':\n      state = moveUp(gridState);\n      break;\n    case 'ArrowDown':\n      state = moveDown(gridState);\n      break;\n    case 'ArrowLeft':\n      state = moveLeft(gridState);\n      break;\n    case 'ArrowRight':\n      state = moveRight(gridState);\n      break;\n    default:\n      return generateTile(gridState);\n  }\n  return generateTile(state);\n};\n\nfunction gameController({ gridSize }) {\n  const [grid, setGrid] = useState(initState(gridSize));\n\n  useKey('ArrowUp', (event) => setGrid((state) => moveGrid(state, event)));\n  useKey('ArrowDown', (event) => setGrid((state) => moveGrid(state, event)));\n  useKey('ArrowLeft', (event) => setGrid((state) => moveGrid(state, event)));\n  useKey('ArrowRight', (event) => setGrid((state) => moveGrid(state, event)));\n\n  return (\n    <>\n      <div css={gameContainerStyles}>{generateGrid(grid)}</div>;\n    </>\n  );\n}\n\ngameController.propTypes = {\n  gridSize: PropTypes.number,\n};\n\ngameController.defaultProps = {\n  gridSize: 4,\n};\n\nexport default gameController;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport GameController from '../../components/gameController';\n\nconst layoutStyles = css`\n  display: flex;\n  flex-wrap: wrap;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default () => (\n  <div css={[layoutStyles]}>\n    <GameController gridSize={4} />\n  </div>\n);\n"],"sourceRoot":""}